@model WebSiteVozesUnidas.Models.VagaEmprego

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>VagaEmprego</h4>
<hr />
<div class="row">
    <div>
        <form asp-action="Create">
            <h4>Informações da Vaga</h4>

            <div class="form-group">
                <label asp-for="Cargo" class="control-label"></label>
                <input asp-for="Cargo" class="form-control" placeholder="Digite aqui o cargo" />
                <span asp-validation-for="Cargo" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="DescricaoVaga" class="control-label"></label>
                <input asp-for="DescricaoVaga" class="form-control" placeholder="Trabalhara atendendo no balcão..." />
                <span asp-validation-for="DescricaoVaga" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="NumeroVagas" class="control-label"></label>
                <input asp-for="NumeroVagas" class="form-control" placeholder="Ex.: 1" />
                <span asp-validation-for="NumeroVagas" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Beneficios" class="control-label"></label>
                <input asp-for="Beneficios" class="form-control" placeholder="Ex.: Vale alimentação, Vale refeição..." />
                <span asp-validation-for="Beneficios" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Requisitos" class="control-label"></label>
                <input asp-for="Requisitos" class="form-control" placeholder="Ex.: Inglês basico, Horário flexivel..." />
                <span asp-validation-for="Requisitos" class="text-danger"></span>
            </div>

            <h4>Qual o regime de contratação?</h4>

            <div class="form-group">
                <div class="form-check form-check-inline">
                    <input asp-for="NumeroVagas" class="form-check-input" type="radio" name="regimeContratacao" id="autonomo" value="Autônomo">
                    <label asp-for="NumeroVagas" class="form-check-label" for="autonomo">Autônomo</label>
                </div>

                <div class="form-check form-check-inline">
                    <input asp-for="NumeroVagas" class="form-check-input" type="radio" name="regimeContratacao" id="clt" value="CLT">
                    <label asp-for="NumeroVagas" class="form-check-label" for="clt">CLT (Efetivo)</label>
                </div>

                <div class="form-check form-check-inline">
                    <input asp-for="NumeroVagas" class="form-check-input" type="radio" name="regimeContratacao" id="cooperado" value="Cooperado">
                    <label asp-for="NumeroVagas" class="form-check-label" for="cooperado">Cooperado</label>
                </div>

                <div class="form-check form-check-inline">
                    <input asp-for="NumeroVagas" class="form-check-input" type="radio" name="regimeContratacao" id="freelancer" value="Free-lancer">
                    <label asp-for="NumeroVagas" class="form-check-label" for="freelancer">Free-lancer</label>
                </div>

                <div class="form-check form-check-inline">
                    <input asp-for="NumeroVagas" class="form-check-input" type="radio" name="regimeContratacao" id="pj" value="PJ">
                    <label asp-for="NumeroVagas" class="form-check-label" for="pj">Prestador de serviços (PJ)</label>
                </div>

                <div class="form-check form-check-inline">
                    <input asp-for="NumeroVagas" class="form-check-input" type="radio" name="regimeContratacao" id="temporario" value="Temporário">
                    <label asp-for="NumeroVagas" class="form-check-label" for="temporario">Temporário</label>
                </div>

                <div class="form-check form-check-inline">
                    <input asp-for="NumeroVagas" class="form-check-input" type="radio" name="regimeContratacao" id="trainee" value="Trainee">
                    <label asp-for="NumeroVagas" class="form-check-label" for="trainee">Trainee</label>
                </div>

                <div class="form-check form-check-inline">
                    <input asp-for="NumeroVagas" class="form-check-input" type="radio" name="regimeContratacao" id="estagio" value="Estágio">
                    <label asp-for="NumeroVagas" class="form-check-label" for="estagio">Estágio</label>
                </div>
            </div>

            <h4>
                Qual a jornada de trabalho?
            </h4>

            <div class="form-group">
                <label asp-for="HorarioExpediente" class="control-label"></label>
                <input asp-for="HorarioExpediente" class="form-control" placeholder="Ex.: De degunda a sexta, das 09h ás 18h" />
                <span asp-validation-for="HorarioExpediente" class="text-danger"></span>
            </div>

            <h4>Qual o local de trabalho?</h4>

            <div class="form-group">
                <div class="form-check form-check-inline">
                    <input asp-for="LocalTrabalho" class="form-check-input" type="radio" name="LocalTrabalho" id="Presencial" value="Presencial">
                    <label asp-for="LocalTrabalho" class="form-check-label" for="Presencial">Presencial</label>
                </div>

                <div class="form-check form-check-inline">
                    <input asp-for="LocalTrabalho" class="form-check-input" type="radio" name="LocalTrabalho" id="Remoto" value="Remoto">
                    <label asp-for="LocalTrabalho" class="form-check-label" for="Remoto">Remoto</label>
                </div>

                <div class="form-check form-check-inline">
                    <input asp-for="LocalTrabalho" class="form-check-input" type="radio" name="LocalTrabalho" id="Hibrido" value="Hibrido">
                    <label asp-for="LocalTrabalho" class="form-check-label" for="Hibrido">Híbrido</label>
                </div>
            </div>

            <div class="form-group">
                <label asp-for="Salario" class="control-label"></label>
                <input asp-for="Salario" class="form-control" placeholder="1233,00"/>
                <span asp-validation-for="Salario" class="text-danger"></span>
            </div>

            <!-- Campo ESTADO -->
            <div class="form-floating mb-3" id="estado">
                <select asp-for="Estado" id="estado-pf" class="form-select" onchange="selecionarEstado(this)" placeholder="Selecione um estado">
                    <option value="">Selecione um estado</option>
                </select>
                <label for="estado-pf">Estado</label>
            </div>

            <!-- Campo CIDADE -->
            <div class="form-floating mb-3" id="cidade">
                <select asp-for="Cidade" id="cidade-pf" class="form-select" disabled onchange="selecionarCidade(this)" placeholder="Selecione uma cidade">
                    <option value="">Selecione uma cidade</option>
                </select>
                <label for="cidade-pf">Cidade</label>
            </div>

            <button type="submit" class="btn btn-outline-success">CRIAR</button>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script>
    let estados = [];
    let cidades = {};

    // Carregar os estados ao iniciar a página
    document.addEventListener('DOMContentLoaded', carregarEstados);

    // Função para carregar os estados do IBGE
    function carregarEstados() {
        fetch('https://servicodados.ibge.gov.br/api/v1/localidades/estados?orderBy=nome')
            .then(response => response.json())
            .then(data => {
                estados = data.map(estado => ({
                    id: estado.id,
                    nome: estado.nome,
                    sigla: estado.sigla
                }));
                preencherSelectEstados();
            });
    }

    // Preenche o select de estados
    function preencherSelectEstados() {
        const selectEstado = document.getElementById('estado-pf');
        estados.forEach(estado => {
            const option = document.createElement('option');
            option.value = estado.nome; // Define o nome do estado como valor
            option.textContent = `${estado.nome} (${estado.sigla})`;
            selectEstado.appendChild(option);
        });
    }

    // Quando um estado é selecionado, carrega as cidades
    function selecionarEstado(select) {
        const estadoNome = select.value;
        const estadoSelecionado = estados.find(estado => estado.nome === estadoNome);

        if (estadoSelecionado) {
            carregarCidades(estadoSelecionado.id);
            document.getElementById('cidade-pf').disabled = false;
        } else {
            document.getElementById('cidade-pf').innerHTML = '<option value="">Selecione uma cidade</option>';
            document.getElementById('cidade-pf').disabled = true;
        }
    }

    // Carrega as cidades do estado selecionado
    function carregarCidades(estadoId) {
        fetch(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${estadoId}/municipios`)
            .then(response => response.json())
            .then(data => {
                cidades[estadoId] = data.map(cidade => cidade.nome);
                preencherSelectCidades(estadoId);
            });
    }

    // Preenche o select de cidades com base no estado selecionado
    function preencherSelectCidades(estadoId) {
        const selectCidade = document.getElementById('cidade-pf');
        selectCidade.innerHTML = '<option value="">Selecione uma cidade</option>';
        cidades[estadoId].forEach(cidade => {
            const option = document.createElement('option');
            option.value = cidade; // Nome da cidade como valor
            option.textContent = cidade;
            selectCidade.appendChild(option);
        });
    }

    // Exemplo de função que pode ser usada ao selecionar uma cidade
    function selecionarCidade(select) {
        const cidadeSelecionada = select.value;
        console.log('Cidade selecionada:', cidadeSelecionada);
    }
</script>
