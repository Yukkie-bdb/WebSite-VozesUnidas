@page
@model IndexModel
@{
    ViewData["Title"] = "Perfil";
    ViewData["ActivePage"] = ManageNavPages.Index;
}


<div class="d-flex col-12">
    <div class="d-flex flex-column bg-secondary col-4 justify-content-center align-items-center position-relative">

        <img id="profileImage" src="@(string.IsNullOrEmpty(Model.Input.Foto) ? Url.Content("~/img/default.jpg") : Url.Content($"~/img/{Model.Input.Foto}"))"
             class="rounded-circle mb-3"
             style="width: 24vh; height: 24vh; object-fit: cover; cursor:pointer;" />

        <p class="mb-1">@Model.Input.Nome</p>
        <p class="mb-1">@Model.Input.Nascimento</p>
        <p class="mb-1">@Model.Input.Email</p>

        <!-- Ícone de três pontos no canto superior direito -->
        <div class="position-absolute top-0 end-0 m-2">
            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16">
                <path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0m0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0" />
            </svg>
        </div>

        <div class="d-flex flex-row justify-content-between mt-4">
            <div class="bg-light mx-3" style="width:50px; height:50px;">a</div>

            <div class="bg-light mx-3" style="width:50px; height:50px;">a</div>

            <div class="bg-light mx-3" style="width:50px; height:50px;">a</div>
        </div>
    </div>

    <div class="bg-info col-8">

        <h2>@ViewData["Title"]</h2>
        <hr />

        <h3>Sobre</h3>
        <p>@Model.Input.Sobre</p>

        <div class="d-flex flex-wrap">
        @foreach(var item in Model.Input.Vagas)
        {
            <div class="d-flex flex-column bg-white col-5 m-auto mb-5">
                <h2>@item.Cargo</h2>
                <p>@item.DescricaoVaga</p>
                
            </div>
        }
        </div>
    </div>
</div>


@* <h3>@ViewData["Title"]</h3>
<partial name="_StatusMessage" for="StatusMessage" />
<div class="row">
    <div class="col-md-6">
        <form id="profile-form" method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>

            <!-- Campo Foto -->
            <div class="form-group mb-3">
            <label asp-for="Input.Foto" class="control-label"></label>
                <input asp-for="Input.Foto" type="file" class="form-control" value="Input.Foto" name="imgUp" id="imgUp" style="display:none;"
                       accept=".jpg,.jpeg,.png, .gif" onchange="validateFileType()"/>
            <span asp-validation-for="Input.Foto" class="text-danger"></span>
            </div>

            <!-- Imagem -->
            <img id="profileImage" src="@(string.IsNullOrEmpty(Model.Input.Foto) ? Url.Content("~/img/default.jpg") : Url.Content($"~/img/{Model.Input.Foto}"))" class="rounded-circle mb-3" style="width: 24vh; height: 24vh; object-fit: cover; cursor:pointer;" />

            <!-- Campo Nome -->
            <div class="form-floating mb-3">
                <input asp-for="Input.Nome" class="form-control" placeholder="Nome" />
                <label asp-for="Input.Nome">Nome do Usuário</label>
                <span asp-validation-for="Input.Nome" class="text-danger"></span>
            </div>

            <!-- Campo Email -->
            <div class="form-floating mb-3">
                <input asp-for="Input.Email" class="form-control" placeholder="Email" />
                <label asp-for="Input.Email">Email do Usuário</label>
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>

            <!-- Campo Email -->
            <div class="form-floating mb-3">
                <input asp-for="Input.PhoneNumber" class="form-control" placeholder="Telefone" />
                <label asp-for="Input.PhoneNumber">Telefone do Usuário</label>
                <span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
            </div>

            <!-- Campo Sobre -->
            <div class="form-floating mb-3">
                <textarea asp-for="Input.Sobre" class="form-control" placeholder="Sobre"></textarea>
                <label asp-for="Input.Sobre">Sobre o Usuário</label>
                <span asp-validation-for="Input.Sobre" class="text-danger"></span>
            </div>

            <!-- Campo TipoUsuario -->
            <div class="form-floating mb-3">
                <input asp-for="Input.Tipo" class="form-control" placeholder="Tipo do Usuario" disabled />
                <label asp-for="Input.Tipo">Tipo de Usuário</label>
                <span asp-validation-for="Input.Tipo" class="text-danger"></span>
            </div>

            <!-- Campo Data de Nascimento -->
            <div class="form-floating mb-3">
                <input asp-for="Input.Nascimento" class="form-control" type="date" placeholder="Data de Nascimento" />
                <label asp-for="Input.Nascimento">Data de Nascimento</label>
                <span asp-validation-for="Input.Nascimento" class="text-danger"></span>
            </div>

            <!-- Campo Habilidades -->
            <div class="form-floating mb-3" id="habilidades-container">
                @for (int i = 0; i < Model.Input.Habilidades.Count; i++)
                {
                    <div class="habilidade-item">
                        <input asp-for="Input.Habilidades[i]" class="form-control mb-3" placeholder="Habilidade @i" id="campoHabilidade-@i" />
                        <button type="button" class="btn btn-danger" onclick="removeHabilidade(this)">Remover</button>
                    </div>
                }
            </div>

            <!-- Botão para adicionar nova habilidade -->
            <button type="button" class="btn btn-primary" id="addHabilidadeBtn">Adicionar Habilidade</button>


            <!-- Campo Objetivos -->
            <div class="form-floating mb-3">
                <textarea asp-for="Input.Objetivos" class="form-control" placeholder="Objetivos"></textarea>
                <label asp-for="Input.Objetivos">Objetivos Profissionais</label>
                <span asp-validation-for="Input.Objetivos" class="text-danger"></span>
            </div>

            <!-- Campo Jornalista -->
            <div class="form-check mb-3">
                <input asp-for="Input.Jornalista" class="form-check-input" type="checkbox" value="True" disabled />
                <label asp-for="Input.Jornalista" class="form-check-label">É Jornalista?</label>
                <span asp-validation-for="Input.Jornalista" class="text-danger"></span>
            </div>

            <!-- Campo CPF -->
            <div class="form-floating mb-3">
                <input asp-for="Input.CPF" class="form-control" placeholder="CPF" />
                <label asp-for="Input.CPF">CPF</label>
                <span asp-validation-for="Input.CPF" class="text-danger"></span>
            </div>

            <!-- Campo CNPJ -->
            <div class="form-floating mb-3">
                <input asp-for="Input.CNPJ" class="form-control" placeholder="CNPJ" />
                <label asp-for="Input.CNPJ">CNPJ</label>
                <span asp-validation-for="Input.CNPJ" class="text-danger"></span>
            </div>

            <button id="update-profile-button" type="submit" class="w-100 btn btn-lg btn-primary">Save</button>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

}

<!-- JavaScript para o clique na imagem -->
<script>
    // Ao clicar na imagem, abre o campo de upload
    document.getElementById("profileImage").onclick = function () {
        document.getElementById("imgUp").click();
    };

    // Quando uma nova imagem for selecionada, atualiza a visualização da imagem
    document.getElementById("imgUp").onchange = function (event) {
        const [file] = event.target.files;
        if (file) {
            // Valida o tipo de arquivo antes de atualizar a imagem
            var fileName = event.target.value;
            var idxDot = fileName.lastIndexOf(".") + 1;
            var extFile = fileName.substr(idxDot, fileName.length).toLowerCase();

            if (extFile == "jpg" || extFile == "jpeg" || extFile == "png") {
                document.getElementById("profileImage").src = URL.createObjectURL(file);
            } else {
                alert("Only jpg/jpeg and png files are allowed!");
                // Limpa o campo de upload
                document.getElementById("imgUp").value = "";
            }
        }
    };
</script>   
    
<script>
    // Função para remover uma habilidade
    function removeHabilidade(button) {
        var habilidadeItem = button.closest('.habilidade-item');
        habilidadeItem.remove();

        // Reindexa os campos de habilidades restantes
        var habilidades = document.querySelectorAll('#habilidades-container .habilidade-item');
        habilidades.forEach((item, index) => {
            var input = item.querySelector('input');
            var button = item.querySelector('button');
            input.setAttribute('id', 'campoHabilidade-' + index);
            input.setAttribute('name', 'Input.Habilidades[' + index + ']');
            button.setAttribute('onclick', 'removeHabilidade(this)');
        });
    }

    // Função para adicionar uma nova habilidade
    document.getElementById('addHabilidadeBtn').addEventListener('click', function () {
        var habilidadesContainer = document.getElementById('habilidades-container');

        // Contador para gerar novos ids para os campos de habilidades
        var newIndex = habilidadesContainer.getElementsByClassName('habilidade-item').length;

        var newHabilidadeDiv = document.createElement('div');
        newHabilidadeDiv.classList.add('habilidade-item');
        newHabilidadeDiv.innerHTML = `
                    <input name="Input.Habilidades[${newIndex}]" class="form-control mb-3" placeholder="Habilidade ${newIndex}" id="campoHabilidade-${newIndex}" />
                    <button type="button" class="btn btn-danger" onclick="removeHabilidade(this)">Remover</button>
                `;

        habilidadesContainer.appendChild(newHabilidadeDiv);
    });
</script> *@